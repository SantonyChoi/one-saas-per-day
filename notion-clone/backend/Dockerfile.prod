FROM node:20-alpine AS builder

WORKDIR /app

# package.json 생성
RUN touch package.json && echo '{"name":"backend","version":"1.0.0","type":"module","scripts":{"dev":"nodemon --exec ts-node --esm src/index.ts","build":"tsc","start":"node dist/index.js"}}' > package.json

# tsconfig.json 생성
RUN touch tsconfig.json && echo '{"compilerOptions":{"target":"ES2020","module":"NodeNext","moduleResolution":"NodeNext","esModuleInterop":true,"strict":true,"outDir":"dist","rootDir":"src","sourceMap":true,"resolveJsonModule":true,"allowSyntheticDefaultImports":true},"include":["src/**/*"],"exclude":["node_modules"]}' > tsconfig.json

# 필요한 디렉토리 생성
RUN mkdir -p src

# 필요한 패키지 설치
RUN npm install express cors bcrypt jsonwebtoken cookie-parser socket.io better-sqlite3 dotenv
RUN npm install --save-dev typescript @types/node @types/express @types/cors @types/bcrypt @types/jsonwebtoken @types/cookie-parser @types/better-sqlite3 ts-node nodemon

# 소스 코드 복사
COPY . .

# 애플리케이션 빌드
RUN npm run build

# 프로덕션 스테이지
FROM node:20-alpine

WORKDIR /app

# package.json 복사
COPY --from=builder /app/package.json ./

# 프로덕션 의존성만 설치
RUN npm install --only=production

# 빌드된 애플리케이션 복사
COPY --from=builder /app/dist ./dist

# 데이터 디렉토리 생성
RUN mkdir -p /app/data && chmod 777 /app/data

# 포트 노출
EXPOSE 4000

# 애플리케이션 시작
CMD ["npm", "start"] 